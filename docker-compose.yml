services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: final
    image: ai-code-review-app:latest
    restart: unless-stopped
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
    env_file:
      - .env.docker
    volumes:
      - app_code:/var/www/html
    expose:
      - "9000"
    depends_on:
      - mysql
      - redis

  web:
    image: nginx:1.24-alpine
    restart: unless-stopped
    ports:
      - "8000:80"   # host:container
    volumes:
      - app_code:/var/www/html:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app

  mysql:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  app_code:
  mysql_data:
  redis_data:
